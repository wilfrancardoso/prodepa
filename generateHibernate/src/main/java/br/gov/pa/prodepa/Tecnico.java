package br.gov.pa.prodepa;
// Generated Nov 1, 2019 4:29:22 PM by Hibernate Tools 5.2.12.Final

import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.OneToMany;
import javax.persistence.Table;

/**
 * Tecnico generated by hbm2java
 */
@Entity
@Table(name = "tecnico")
public class Tecnico implements java.io.Serializable {

	private long id;
	private Ocupacao ocupacao;
	private int situacao;
	private long idUsuario;
	private Set atendimentos = new HashSet(0);
	private Set historicoTransferencias = new HashSet(0);
	private Set tecnicoCentros = new HashSet(0);
	private Set agendaTecnicos = new HashSet(0);
	private Set comunicadosForIdTecnicoAlteracao = new HashSet(0);
	private Set atendimentoVisitaDomiciliars = new HashSet(0);
	private Set preAcolhimentos = new HashSet(0);
	private Set atendimentos_1 = new HashSet(0);
	private Set atendimentoGrupos = new HashSet(0);
	private Set comunicadosForIdTecnicoCriacao = new HashSet(0);
	private Set encaminhamentos = new HashSet(0);
	private Set evolucaoAtendimentos = new HashSet(0);

	public Tecnico() {
	}

	public Tecnico(long id, Ocupacao ocupacao, int situacao, long idUsuario) {
		this.id = id;
		this.ocupacao = ocupacao;
		this.situacao = situacao;
		this.idUsuario = idUsuario;
	}

	public Tecnico(long id, Ocupacao ocupacao, int situacao, long idUsuario, Set atendimentos,
			Set historicoTransferencias, Set tecnicoCentros, Set agendaTecnicos, Set comunicadosForIdTecnicoAlteracao,
			Set atendimentoVisitaDomiciliars, Set preAcolhimentos, Set atendimentos_1, Set atendimentoGrupos,
			Set comunicadosForIdTecnicoCriacao, Set encaminhamentos, Set evolucaoAtendimentos) {
		this.id = id;
		this.ocupacao = ocupacao;
		this.situacao = situacao;
		this.idUsuario = idUsuario;
		this.atendimentos = atendimentos;
		this.historicoTransferencias = historicoTransferencias;
		this.tecnicoCentros = tecnicoCentros;
		this.agendaTecnicos = agendaTecnicos;
		this.comunicadosForIdTecnicoAlteracao = comunicadosForIdTecnicoAlteracao;
		this.atendimentoVisitaDomiciliars = atendimentoVisitaDomiciliars;
		this.preAcolhimentos = preAcolhimentos;
		this.atendimentos_1 = atendimentos_1;
		this.atendimentoGrupos = atendimentoGrupos;
		this.comunicadosForIdTecnicoCriacao = comunicadosForIdTecnicoCriacao;
		this.encaminhamentos = encaminhamentos;
		this.evolucaoAtendimentos = evolucaoAtendimentos;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ocupacao", nullable = false)
	public Ocupacao getOcupacao() {
		return this.ocupacao;
	}

	public void setOcupacao(Ocupacao ocupacao) {
		this.ocupacao = ocupacao;
	}

	@Column(name = "situacao", nullable = false)
	public int getSituacao() {
		return this.situacao;
	}

	public void setSituacao(int situacao) {
		this.situacao = situacao;
	}

	@Column(name = "id_usuario", nullable = false)
	public long getIdUsuario() {
		return this.idUsuario;
	}

	public void setIdUsuario(long idUsuario) {
		this.idUsuario = idUsuario;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "atendimento_tecnico", joinColumns = {
			@JoinColumn(name = "id_tecnico", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_atendimento", nullable = false, updatable = false) })
	public Set getAtendimentos() {
		return this.atendimentos;
	}

	public void setAtendimentos(Set atendimentos) {
		this.atendimentos = atendimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tecnico")
	public Set getHistoricoTransferencias() {
		return this.historicoTransferencias;
	}

	public void setHistoricoTransferencias(Set historicoTransferencias) {
		this.historicoTransferencias = historicoTransferencias;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tecnico")
	public Set getTecnicoCentros() {
		return this.tecnicoCentros;
	}

	public void setTecnicoCentros(Set tecnicoCentros) {
		this.tecnicoCentros = tecnicoCentros;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tecnico")
	public Set getAgendaTecnicos() {
		return this.agendaTecnicos;
	}

	public void setAgendaTecnicos(Set agendaTecnicos) {
		this.agendaTecnicos = agendaTecnicos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tecnicoByIdTecnicoAlteracao")
	public Set getComunicadosForIdTecnicoAlteracao() {
		return this.comunicadosForIdTecnicoAlteracao;
	}

	public void setComunicadosForIdTecnicoAlteracao(Set comunicadosForIdTecnicoAlteracao) {
		this.comunicadosForIdTecnicoAlteracao = comunicadosForIdTecnicoAlteracao;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "atendimento_visita_domiciliar_tecnico", joinColumns = {
			@JoinColumn(name = "id_tecnico", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_atendimento_visita_domiciliar", nullable = false, updatable = false) })
	public Set getAtendimentoVisitaDomiciliars() {
		return this.atendimentoVisitaDomiciliars;
	}

	public void setAtendimentoVisitaDomiciliars(Set atendimentoVisitaDomiciliars) {
		this.atendimentoVisitaDomiciliars = atendimentoVisitaDomiciliars;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tecnico")
	public Set getPreAcolhimentos() {
		return this.preAcolhimentos;
	}

	public void setPreAcolhimentos(Set preAcolhimentos) {
		this.preAcolhimentos = preAcolhimentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tecnico")
	public Set getAtendimentos_1() {
		return this.atendimentos_1;
	}

	public void setAtendimentos_1(Set atendimentos_1) {
		this.atendimentos_1 = atendimentos_1;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "atendimento_grupo_tecnico", joinColumns = {
			@JoinColumn(name = "id_tecnico", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_atendimento_grupo", nullable = false, updatable = false) })
	public Set getAtendimentoGrupos() {
		return this.atendimentoGrupos;
	}

	public void setAtendimentoGrupos(Set atendimentoGrupos) {
		this.atendimentoGrupos = atendimentoGrupos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tecnicoByIdTecnicoCriacao")
	public Set getComunicadosForIdTecnicoCriacao() {
		return this.comunicadosForIdTecnicoCriacao;
	}

	public void setComunicadosForIdTecnicoCriacao(Set comunicadosForIdTecnicoCriacao) {
		this.comunicadosForIdTecnicoCriacao = comunicadosForIdTecnicoCriacao;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tecnico")
	public Set getEncaminhamentos() {
		return this.encaminhamentos;
	}

	public void setEncaminhamentos(Set encaminhamentos) {
		this.encaminhamentos = encaminhamentos;
	}

	@OneToMany(fetch = FetchType.LAZY, mappedBy = "tecnico")
	public Set getEvolucaoAtendimentos() {
		return this.evolucaoAtendimentos;
	}

	public void setEvolucaoAtendimentos(Set evolucaoAtendimentos) {
		this.evolucaoAtendimentos = evolucaoAtendimentos;
	}

}
