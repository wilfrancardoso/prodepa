package br.gov.pa.prodepa;
// Generated Nov 1, 2019 4:29:22 PM by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * Dependente generated by hbm2java
 */
@Entity
@Table(name = "dependente")
public class Dependente implements java.io.Serializable {

	private long id;
	private GrauRelacao grauRelacaoByComQuemMora;
	private GrauRelacao grauRelacaoByIdGrauRelacao;
	private Ocupacao ocupacao;
	private Usuaria usuaria;
	private String nome;
	private int sexo;
	private Integer estuda;
	private Integer portadorNecessidadesEspeciais;
	private Integer portadorProblemasPsicologicos;
	private Integer nivelEscolaridade;
	private Integer relacionamento;
	private int situacao;
	private Date dataNascimento;
	private String observacao;
	private Set necessidadeEspecials = new HashSet(0);
	private Set tipoProblemaPsicologicos = new HashSet(0);

	public Dependente() {
	}

	public Dependente(long id, GrauRelacao grauRelacaoByComQuemMora, GrauRelacao grauRelacaoByIdGrauRelacao,
			Usuaria usuaria, String nome, int sexo, int situacao) {
		this.id = id;
		this.grauRelacaoByComQuemMora = grauRelacaoByComQuemMora;
		this.grauRelacaoByIdGrauRelacao = grauRelacaoByIdGrauRelacao;
		this.usuaria = usuaria;
		this.nome = nome;
		this.sexo = sexo;
		this.situacao = situacao;
	}

	public Dependente(long id, GrauRelacao grauRelacaoByComQuemMora, GrauRelacao grauRelacaoByIdGrauRelacao,
			Ocupacao ocupacao, Usuaria usuaria, String nome, int sexo, Integer estuda,
			Integer portadorNecessidadesEspeciais, Integer portadorProblemasPsicologicos, Integer nivelEscolaridade,
			Integer relacionamento, int situacao, Date dataNascimento, String observacao, Set necessidadeEspecials,
			Set tipoProblemaPsicologicos) {
		this.id = id;
		this.grauRelacaoByComQuemMora = grauRelacaoByComQuemMora;
		this.grauRelacaoByIdGrauRelacao = grauRelacaoByIdGrauRelacao;
		this.ocupacao = ocupacao;
		this.usuaria = usuaria;
		this.nome = nome;
		this.sexo = sexo;
		this.estuda = estuda;
		this.portadorNecessidadesEspeciais = portadorNecessidadesEspeciais;
		this.portadorProblemasPsicologicos = portadorProblemasPsicologicos;
		this.nivelEscolaridade = nivelEscolaridade;
		this.relacionamento = relacionamento;
		this.situacao = situacao;
		this.dataNascimento = dataNascimento;
		this.observacao = observacao;
		this.necessidadeEspecials = necessidadeEspecials;
		this.tipoProblemaPsicologicos = tipoProblemaPsicologicos;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "com_quem_mora", nullable = false)
	public GrauRelacao getGrauRelacaoByComQuemMora() {
		return this.grauRelacaoByComQuemMora;
	}

	public void setGrauRelacaoByComQuemMora(GrauRelacao grauRelacaoByComQuemMora) {
		this.grauRelacaoByComQuemMora = grauRelacaoByComQuemMora;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_grau_relacao", nullable = false)
	public GrauRelacao getGrauRelacaoByIdGrauRelacao() {
		return this.grauRelacaoByIdGrauRelacao;
	}

	public void setGrauRelacaoByIdGrauRelacao(GrauRelacao grauRelacaoByIdGrauRelacao) {
		this.grauRelacaoByIdGrauRelacao = grauRelacaoByIdGrauRelacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_ocupacao")
	public Ocupacao getOcupacao() {
		return this.ocupacao;
	}

	public void setOcupacao(Ocupacao ocupacao) {
		this.ocupacao = ocupacao;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_usuaria", nullable = false)
	public Usuaria getUsuaria() {
		return this.usuaria;
	}

	public void setUsuaria(Usuaria usuaria) {
		this.usuaria = usuaria;
	}

	@Column(name = "nome", nullable = false)
	public String getNome() {
		return this.nome;
	}

	public void setNome(String nome) {
		this.nome = nome;
	}

	@Column(name = "sexo", nullable = false)
	public int getSexo() {
		return this.sexo;
	}

	public void setSexo(int sexo) {
		this.sexo = sexo;
	}

	@Column(name = "estuda")
	public Integer getEstuda() {
		return this.estuda;
	}

	public void setEstuda(Integer estuda) {
		this.estuda = estuda;
	}

	@Column(name = "portador_necessidades_especiais")
	public Integer getPortadorNecessidadesEspeciais() {
		return this.portadorNecessidadesEspeciais;
	}

	public void setPortadorNecessidadesEspeciais(Integer portadorNecessidadesEspeciais) {
		this.portadorNecessidadesEspeciais = portadorNecessidadesEspeciais;
	}

	@Column(name = "portador_problemas_psicologicos")
	public Integer getPortadorProblemasPsicologicos() {
		return this.portadorProblemasPsicologicos;
	}

	public void setPortadorProblemasPsicologicos(Integer portadorProblemasPsicologicos) {
		this.portadorProblemasPsicologicos = portadorProblemasPsicologicos;
	}

	@Column(name = "nivel_escolaridade")
	public Integer getNivelEscolaridade() {
		return this.nivelEscolaridade;
	}

	public void setNivelEscolaridade(Integer nivelEscolaridade) {
		this.nivelEscolaridade = nivelEscolaridade;
	}

	@Column(name = "relacionamento")
	public Integer getRelacionamento() {
		return this.relacionamento;
	}

	public void setRelacionamento(Integer relacionamento) {
		this.relacionamento = relacionamento;
	}

	@Column(name = "situacao", nullable = false)
	public int getSituacao() {
		return this.situacao;
	}

	public void setSituacao(int situacao) {
		this.situacao = situacao;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_nascimento", length = 13)
	public Date getDataNascimento() {
		return this.dataNascimento;
	}

	public void setDataNascimento(Date dataNascimento) {
		this.dataNascimento = dataNascimento;
	}

	@Column(name = "observacao")
	public String getObservacao() {
		return this.observacao;
	}

	public void setObservacao(String observacao) {
		this.observacao = observacao;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "dependente_necessidade_especial", joinColumns = {
			@JoinColumn(name = "id_dependente", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_necessidade_especial", nullable = false, updatable = false) })
	public Set getNecessidadeEspecials() {
		return this.necessidadeEspecials;
	}

	public void setNecessidadeEspecials(Set necessidadeEspecials) {
		this.necessidadeEspecials = necessidadeEspecials;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "problema_psicologico_dependente", joinColumns = {
			@JoinColumn(name = "id_dependente", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_tipo_problema_psicologico", nullable = false, updatable = false) })
	public Set getTipoProblemaPsicologicos() {
		return this.tipoProblemaPsicologicos;
	}

	public void setTipoProblemaPsicologicos(Set tipoProblemaPsicologicos) {
		this.tipoProblemaPsicologicos = tipoProblemaPsicologicos;
	}

}
