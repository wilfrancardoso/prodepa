package br.gov.pa.prodepa;
// Generated Nov 1, 2019 4:29:22 PM by Hibernate Tools 5.2.12.Final

import java.util.Date;
import java.util.HashSet;
import java.util.Set;
import javax.persistence.Column;
import javax.persistence.Entity;
import javax.persistence.FetchType;
import javax.persistence.Id;
import javax.persistence.JoinColumn;
import javax.persistence.JoinTable;
import javax.persistence.ManyToMany;
import javax.persistence.ManyToOne;
import javax.persistence.Table;
import javax.persistence.Temporal;
import javax.persistence.TemporalType;

/**
 * AtendimentoVisitaDomiciliar generated by hbm2java
 */
@Entity
@Table(name = "atendimento_visita_domiciliar")
public class AtendimentoVisitaDomiciliar implements java.io.Serializable {

	private long id;
	private AgendaAtendimento agendaAtendimento;
	private Centro centro;
	private long numero;
	private Date dataCadastro;
	private Date dataAtendimentoVisitaDomiciliar;
	private String descricao;
	private long usuario;
	private Set usuarias = new HashSet(0);
	private Set tecnicos = new HashSet(0);

	public AtendimentoVisitaDomiciliar() {
	}

	public AtendimentoVisitaDomiciliar(long id, AgendaAtendimento agendaAtendimento, Centro centro, long numero,
			Date dataCadastro, Date dataAtendimentoVisitaDomiciliar, String descricao, long usuario) {
		this.id = id;
		this.agendaAtendimento = agendaAtendimento;
		this.centro = centro;
		this.numero = numero;
		this.dataCadastro = dataCadastro;
		this.dataAtendimentoVisitaDomiciliar = dataAtendimentoVisitaDomiciliar;
		this.descricao = descricao;
		this.usuario = usuario;
	}

	public AtendimentoVisitaDomiciliar(long id, AgendaAtendimento agendaAtendimento, Centro centro, long numero,
			Date dataCadastro, Date dataAtendimentoVisitaDomiciliar, String descricao, long usuario, Set usuarias,
			Set tecnicos) {
		this.id = id;
		this.agendaAtendimento = agendaAtendimento;
		this.centro = centro;
		this.numero = numero;
		this.dataCadastro = dataCadastro;
		this.dataAtendimentoVisitaDomiciliar = dataAtendimentoVisitaDomiciliar;
		this.descricao = descricao;
		this.usuario = usuario;
		this.usuarias = usuarias;
		this.tecnicos = tecnicos;
	}

	@Id

	@Column(name = "id", unique = true, nullable = false)
	public long getId() {
		return this.id;
	}

	public void setId(long id) {
		this.id = id;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_agenda_atendimento", nullable = false)
	public AgendaAtendimento getAgendaAtendimento() {
		return this.agendaAtendimento;
	}

	public void setAgendaAtendimento(AgendaAtendimento agendaAtendimento) {
		this.agendaAtendimento = agendaAtendimento;
	}

	@ManyToOne(fetch = FetchType.LAZY)
	@JoinColumn(name = "id_centro", nullable = false)
	public Centro getCentro() {
		return this.centro;
	}

	public void setCentro(Centro centro) {
		this.centro = centro;
	}

	@Column(name = "numero", nullable = false)
	public long getNumero() {
		return this.numero;
	}

	public void setNumero(long numero) {
		this.numero = numero;
	}

	@Temporal(TemporalType.TIMESTAMP)
	@Column(name = "data_cadastro", nullable = false, length = 29)
	public Date getDataCadastro() {
		return this.dataCadastro;
	}

	public void setDataCadastro(Date dataCadastro) {
		this.dataCadastro = dataCadastro;
	}

	@Temporal(TemporalType.DATE)
	@Column(name = "data_atendimento_visita_domiciliar", nullable = false, length = 13)
	public Date getDataAtendimentoVisitaDomiciliar() {
		return this.dataAtendimentoVisitaDomiciliar;
	}

	public void setDataAtendimentoVisitaDomiciliar(Date dataAtendimentoVisitaDomiciliar) {
		this.dataAtendimentoVisitaDomiciliar = dataAtendimentoVisitaDomiciliar;
	}

	@Column(name = "descricao", nullable = false)
	public String getDescricao() {
		return this.descricao;
	}

	public void setDescricao(String descricao) {
		this.descricao = descricao;
	}

	@Column(name = "usuario", nullable = false)
	public long getUsuario() {
		return this.usuario;
	}

	public void setUsuario(long usuario) {
		this.usuario = usuario;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "atendimento_visita_domiciliar_usuaria", joinColumns = {
			@JoinColumn(name = "id_atendimento_visita_domiciliar", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_usuaria", nullable = false, updatable = false) })
	public Set getUsuarias() {
		return this.usuarias;
	}

	public void setUsuarias(Set usuarias) {
		this.usuarias = usuarias;
	}

	@ManyToMany(fetch = FetchType.LAZY)
	@JoinTable(name = "atendimento_visita_domiciliar_tecnico", joinColumns = {
			@JoinColumn(name = "id_atendimento_visita_domiciliar", nullable = false, updatable = false) }, inverseJoinColumns = {
					@JoinColumn(name = "id_tecnico", nullable = false, updatable = false) })
	public Set getTecnicos() {
		return this.tecnicos;
	}

	public void setTecnicos(Set tecnicos) {
		this.tecnicos = tecnicos;
	}

}
